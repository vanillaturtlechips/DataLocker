name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend 린트 및 테스트
  frontend-check:
    name: Frontend Lint & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint
      
    - name: Run Prettier check
      working-directory: ./frontend
      run: npm run format:check
      
    - name: TypeScript type check
      working-directory: ./frontend
      run: npm run type-check
      
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  # Backend 린트 및 테스트
  backend-check:
    name: Backend Lint & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Install dependencies
      run: go mod download
      
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: backend
        name: backend-coverage
        
    - name: Build backend
      run: make build

  # 통합 빌드 테스트 (Wails)
  integration-build:
    name: Integration Build (Wails)
    runs-on: ubuntu-latest
    needs: [frontend-check, backend-check]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
      
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Build with Wails
      run: wails build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: datalocker-build
        path: build/bin/*